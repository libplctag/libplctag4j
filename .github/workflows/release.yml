name: libplctag4j Release CI

on:
  push:
    branches: [ release ]
  pull_request:
    branches: [ release ]

jobs:

  ubuntu-test:
    name: Ubuntu Test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Build Release JAR
      run: gradle -b build-jar.gradle clean shadowJar

    - name: Test Release JAR
      run: gradle -b build-jar.gradle test --stacktrace --info

  macos-test:
    name: macOS Test
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Build Release JAR
      run: gradle -b build-jar.gradle clean shadowJar

    - name: Test Release JAR
      run: gradle -b build-jar.gradle test --stacktrace --info

  windows-test:
    name: Windows Test
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Build Release JAR
      run: gradle -b build-jar.gradle clean shadowJar

    - name: Test Release JAR
      run: gradle -b build-jar.gradle test --stacktrace --info

  generate-artifacts:
    needs: [ ubuntu-test, windows-test, macos-test ]
    name: Generate artifacts
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: set up JDK 1.11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Get gradle version
      run: gradle -v

    - name: Build Release JAR
      run: gradle -b build-jar.gradle clean shadowJar

    - name: Build Javadoc
      run: gradle -b build-jar.gradle javadoc

    - name: Build POM file
      run: gradle -b build-jar.gradle publishToMavenLocal

    - name: Build Release AAR
      run: gradle -b build-aar.gradle assembleRelease --stacktrace --info

    - name: Get artifact names
      run: |
        ls ${{ github.workspace }}/build/libs/libplctag4j*
        export FULL_NAME=`ls ${{ github.workspace }}/build/libs/libplctag4j-*.jar | tail -n 1`
        echo "FULL_NAME=${FULL_NAME}"
        echo "FULL_NAME=${FULL_NAME}" >> $GITHUB_ENV
        export ARTIFACT_NAME=`basename -s .jar ${FULL_NAME}`
        echo "ARTIFACT_NAME=${ARTIFACT_NAME}"
        echo "ARTIFACT_NAME=${ARTIFACT_NAME}" >> $GITHUB_ENV
        PARTS=($(echo "$ARTIFACT_NAME" | tr '-' "\n"))
        export VERSION="${PARTS[1]}-${PARTS[2]}"
        echo "VERSION=${VERSION}"
        echo "VERSION=${VERSION}" >> $GITHUB_ENV
        export AAR_NAME=`ls ${{ github.workspace }}/build/outputs/aar/libplctag4j-*-release.aar | tail -n 1`
        echo "AAR_NAME=${AAR_NAME}"
        echo "AAR_NAME=${AAR_NAME}" >> $GITHUB_ENV
        export POM_NAME=`ls ${{ github.workspace }}/build/publications/mavenJava/pom-default.xml | tail -n 1`
        echo "POM_NAME=${POM_NAME}"
        echo "POM_NAME=${POM_NAME}" >> $GITHUB_ENV

    - name: Upload full JAR to GitHub
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.ARTIFACT_NAME }}
        path: ${{ env.FULL_NAME }}

    - name: Upload docs to GitHub JAR
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.ARTIFACT_NAME }}
        path: ${{ github.workspace }}/build/docs

    - name: Upload AAR to GitHub
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.ARTIFACT_NAME }}-aar
        path: ${{ env.AAR_NAME }}

    - name: Upload docs to GitHub AAR
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.ARTIFACT_NAME }}-aar
        path: ${{ github.workspace }}/build/docs
